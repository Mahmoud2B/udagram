version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
  # different jobs are calles later in the workflows sections
jobs:
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: 'cimg/node:14.15'
    steps:
      # install node and checkout code
      - node/install:
          node-version: '14.15'
      - checkout
      # Set EB environment variables
      - run:
          name: Set EB environment variables
          command: |
            eb setenv POSTGRES_USERNAME=udagram
            eb setenv POSTGRES_PASSWORD=udagram-123
            eb setenv POSTGRES_HOST=udagram.cwidiuwfojdu.us-east-1.rds.amazonaws.com
            eb setenv POSTGRES_DB=postgres
            eb setenv AWS_BUCKET=udacity-circle-ci
            eb setenv AWS_REGION=us-west-2
            eb setenv AWS_PROFILE=default
            eb setenv JWT_SECRET=mysecretstring
            eb setenv URL=http://localhost:8100
      # Use root level package.json to install dependencies in the frontend app
      - run:
          name: Install Front-End Dependencies
          command: |
            npm run frontend:install
      - run:
          name: Front-End Lint
          command: |
            npm run frontend:lint
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
      - run:
          name: Install API Dependencies
          command: |
            npm run api:install
      - run:
          name: API Build
          command: |
            npm run api:build
  # deploy step will run only after manual approval
  deploy:
    docker:
      - image: 'cimg/base:stable'
      # more setup needed for aws, node, elastic beanstalk
    steps:
      - node/install:
          node-version: '14.15'
      - eb/setup
      - aws-cli/setup
      - checkout
      # Deploy the API application to elastic beanstalk
      - run:
          name: Deploy API
          command: |
            npm run api:deploy
      # Deploy the ionic app to s3
      - run:
          name: Deploy Frontend
          command: |
            npm run frontend:deploy

workflows:
  udagram:
    jobs:
      - build
      - hold:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
